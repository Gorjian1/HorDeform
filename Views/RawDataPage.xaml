<UserControl x:Class="Osadka.Views.RawDataPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:conv="clr-namespace:Osadka.Converters"
             mc:Ignorable="d">

    <UserControl.Resources>
        <SolidColorBrush x:Key="ToolbarBg" Color="#F8F2F0"/>
        <SolidColorBrush x:Key="ToolbarBorder" Color="#AC4533"/>
        <Style TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{StaticResource ToolbarBg}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ToolbarBorder}"/>
        </Style>
        <Style TargetType="{x:Type ToolBarTray}">
            <Setter Property="Background" Value="{StaticResource ToolbarBg}"/>
        </Style>

        <conv:RelaxedDoubleConverter x:Key="RelaxedDouble"/>
        <conv:RelaxedDoubleConverter x:Key="RelaxedDoubleConverter"/>
        <Style x:Key="CircleIconButton" TargetType="Button">
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="6,0,0,0"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="12"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NoOverflowToolBar"
               TargetType="{x:Type ToolBar}"
               BasedOn="{StaticResource {x:Type ToolBar}}">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" ClipToBounds="False"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                ClipToBounds="False">
                            <ItemsPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FastGrid" TargetType="{x:Type DataGrid}">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
            <Setter Property="HeadersVisibility" Value="All"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="SelectionUnit" Value="CellOrRowHeader"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#FF783327"/>
            <Setter Property="VerticalGridLinesBrush"   Value="#FF783327"/>

        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style x:Key="CellText" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="4,2"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>
        <Style x:Key="CellEdit" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="2"/>
        </Style>

        <SolidColorBrush x:Key="AccentBrush" Color="#FFE7CBC4"/>
        <SolidColorBrush x:Key="AccentBrushHover" Color="#FFD9A39A"/>
        <SolidColorBrush x:Key="AccentBrushPressed" Color="#FFAC4533"/>

        <Style x:Key="ToolbarAccentButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Margin" Value="0,0,6,0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentBrushHover}"/>
                                <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource AccentBrushHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource AccentBrushPressed}"/>
                                <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource AccentBrushPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bd" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolbarLabel" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,6,0"/>
        </Style>
        <Style x:Key="ToolbarBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Width" Value="120"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
        </Style>
        <Style x:Key="ToolbarText" TargetType="{x:Type TextBox}">
            <Setter Property="Width" Value="140"/>
            <Setter Property="Margin" Value="0,0,12,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>

    <Grid RenderTransformOrigin="0.501,0.506">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="45.96"/>
            <RowDefinition Height="Auto" MinHeight="33"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <ToolBarTray Grid.Row="0" Margin="8,8,8,7" Background="{StaticResource ToolbarBg}" ClipToBounds="False">
            <ToolBar RenderTransformOrigin="0.473,0.517"
             Margin="-8,0,0,0"
             Background="{StaticResource ToolbarBg}"
             BorderBrush="{StaticResource ToolbarBorder}"
             Style="{StaticResource NoOverflowToolBar}"
             ClipToBounds="False">
                <!-- запрещаем увод элементов в overflow -->
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Control}">
                        <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    </Style>
                    <Style TargetType="{x:Type Separator}">
                        <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    </Style>
                </ToolBar.Resources>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="67.137"/>
                        <ColumnDefinition Width="Auto" MinWidth="498"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" Grid.ColumnSpan="2" Margin="0,0,15,0">
                        <Button Style="{StaticResource ToolbarAccentButton}" Content="📗 Загрузить Excel"
                        Command="{Binding LoadFromWorkbookCommand}"/>
                        <Separator Margin="5,0"/>
                        <Button Style="{StaticResource ToolbarAccentButton}" Content="Вставить (Ctrl+V)"
                        Command="{Binding PasteCommand}"/>
                        <Separator Margin="5,0"/>
                        <Button Style="{StaticResource ToolbarAccentButton}" Content="Очистить"
                        Command="{Binding ClearCommand}"/>
                        <Separator Margin="8,0"/>
                        
                        <Grid Width="210" Height="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=ActualHeight, FallbackValue=24}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="11*"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="28"/>
                            </Grid.ColumnDefinitions>

                            <!-- Левая часть: выбрать/открыть -->
                            <Button Grid.Column="0"
        Command="{Binding ChooseOrOpenTemplateCommand}"
        ToolTip="Если шаблон не выбран — выбрать файл. Если выбран — открыть его." Grid.RowSpan="2" HorizontalAlignment="Right" Width="162">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Content" Value="Выбрать шаблон"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasCustomTemplate}" Value="True">
                                                <Setter Property="Content" Value="Открыть шаблон"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>


                            <!-- Правая часть: корзина (очистить путь) -->
                            <Button Grid.Column="1"
            Command="{Binding ClearTemplateCommand}"
            IsEnabled="{Binding HasCustomTemplate}"
            ToolTip="Очистить путь к пользовательскому шаблону" Grid.RowSpan="2">
                                <TextBlock FontFamily="Segoe MDL2 Assets"
                   Text="&#xE74D;"
                   FontSize="14"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"/>
                            </Button>
                            <Button Style="{StaticResource CircleIconButton}"
        ToolTipService.ShowDuration="60000"
        AutomationProperties.Name="Подсказка по тегам шаблона" Margin="40,0,-36,0" Grid.Column="1" Width="NaN" Grid.RowSpan="2">
                                <TextBlock Text="!" FontWeight="Bold" FontSize="14"
               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Button.ToolTip>
                                    <ToolTip MaxWidth="460">
                                        <ScrollViewer VerticalScrollBarVisibility="Auto" Height="350">
                                            <StackPanel>
                                                <TextBlock FontWeight="Bold" Text="Теги" Margin="0,0,0,6"/>
                                                <TextBlock TextWrapping="Wrap">
                        <Run Text="/цикл"/><LineBreak/>
                        <Run Text="/горпревыш"/><LineBreak/>
                        <Run Text="/векторабс"/><LineBreak/>
                        <Run Text="/векторабсId"/><LineBreak/>
                        <Run Text="/дельтаXабс"/><LineBreak/>
                        <Run Text="/дельтаXабсId"/><LineBreak/>
                        <Run Text="/дельтаYабс"/><LineBreak/>
                        <Run Text="/дельтаYабсId"/><LineBreak/>
                        <Run Text="/дельтаHэкстреммин"/><LineBreak/>
                        <Run Text="/дельтаHэкстремминId"/><LineBreak/>
                        <Run Text="/дельтаHэкстреммакс"/><LineBreak/>
                        <Run Text="/дельтаHэкстреммаксId"/><LineBreak/>
                        <Run Text="/дельтаYпревыш"/><LineBreak/>
                        <Run Text="/дельтаXпревыш"/><LineBreak/>
                        <Run Text="/векторпревыш"/><LineBreak/>
                        <Run Text="/дельтаHпревыш"/><LineBreak/>
                                                </TextBlock>
                                            </StackPanel>
                                        </ScrollViewer>
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>

                        </Grid>
                    </StackPanel>

                    <TextBlock Grid.Column="3" Text="{Binding SelectedCycleHeader}" Opacity="0.75"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" Width="0"/>
                    <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Center" Width="498">
                        <TextBlock Style="{StaticResource ToolbarLabel}" Text="Объект №"/>
                        <ComboBox Style="{StaticResource ToolbarBox}"
                          ItemsSource="{Binding ObjectNumbers}"
                          SelectedItem="{Binding Header.ObjectNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="80"/>

                        <TextBlock Style="{StaticResource ToolbarLabel}" Text="Цикл №"/>
                        <ComboBox Style="{StaticResource ToolbarBox}"
                          ItemsSource="{Binding CycleNumbers}"
                          SelectedValuePath="."
                          SelectedValue="{Binding Header.CycleNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="80"/>
                    </StackPanel>
                </Grid>
            </ToolBar>
        </ToolBarTray>


        <!-- НИЖНИЙ ТУЛБАР: сделан нескладываемым (как в первом проекте) -->
        <ToolBarTray Margin="0,46,8,26" Grid.RowSpan="3" Background="{StaticResource ToolbarBg}" ClipToBounds="False">
            <ToolBar Margin="0,5,0,5"
                     Background="{StaticResource ToolbarBg}"
                     BorderBrush="{StaticResource ToolbarBorder}"
                     Style="{StaticResource NoOverflowToolBar}"
                     ClipToBounds="False">
                <!-- запрещаем отправку элементов в overflow -->
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Control}">
                        <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    </Style>
                    <Style TargetType="{x:Type Separator}">
                        <Setter Property="ToolBar.OverflowMode" Value="Never"/>
                    </Style>
                </ToolBar.Resources>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource ToolbarLabel}" Text="Гризонтальное превышение:"/>
                    <TextBox  Width="84" Text="{Binding Header.HorNomen,
                        Mode=TwoWay,
                        Converter={StaticResource RelaxedDouble},
                        UpdateSourceTrigger=PropertyChanged}"
         PreviewTextInput="Limit_PreviewTextInput"
         PreviewKeyDown="Limit_PreviewKeyDown"
         DataObject.Pasting="Limit_Pasting" />

                    <Separator/>
                </StackPanel>
            </ToolBar>
        </ToolBarTray>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="17*"/>
                <RowDefinition Height="13*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Grid.RowSpan="3">
                <Grid.Resources>
                    <Style TargetType="DataGrid" BasedOn="{StaticResource FastGrid}"/>
                </Grid.Resources>

                <DataGrid ItemsSource="{Binding DataRows}">
                    <DataGrid.Style>
                        <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasHeight}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Style>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="№"
                                            Binding="{Binding Id}"
                                            Width="60">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="ΔX, мм"
                                            Binding="{Binding Dx}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="ΔY, мм"
                                            Binding="{Binding Dy}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="ΔH, мм"
                                            Binding="{Binding Dh}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Вектор, мм"
                                            Binding="{Binding Vector}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid ItemsSource="{Binding DataRows}">
                    <DataGrid.Style>
                        <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasHeight}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Style>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="№"
                                            Binding="{Binding Id}"
                                            Width="60">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="ΔX, мм"
                                            Binding="{Binding Dx}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="ΔY, мм"
                                            Binding="{Binding Dy}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Вектор, мм"
                                            Binding="{Binding Vector}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <GridSplitter Grid.Column="1" Width="8" HorizontalAlignment="Stretch" Background="#EEE" Grid.RowSpan="3"/>

            <Grid Grid.Column="2" Grid.RowSpan="3">
                <Grid.Resources>
                    <Style TargetType="DataGrid" BasedOn="{StaticResource FastGrid}"/>
                </Grid.Resources>

                <DataGrid ItemsSource="{Binding CoordRows}">
                    <DataGrid.Style>
                        <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasHeight}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Style>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="X"
                                            Binding="{Binding X, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Y"
                                            Binding="{Binding Y, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="H"
                                            Binding="{Binding H, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <DataGrid ItemsSource="{Binding CoordRows}">
                    <DataGrid.Style>
                        <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasHeight}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Style>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="X"
                                            Binding="{Binding X, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Y"
                                            Binding="{Binding Y, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource CellText}">
                                    <Setter Property="TextAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox" BasedOn="{StaticResource CellEdit}">
                                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
